include:
  - ./actualbudget/docker-compose.yml
services:
  nginx:
    image: nginx:alpine
      #    build:
      #      context: ./nginx
      #      dockerfile: Dockerfile
    restart: always
    container_name: ${NGINX_HOST}
    env_file: .env
    working_dir: /etc/nginx/templates
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template
      - ./ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - actual_server
      - mealie
      - paperless-webserver

  # mealie
  mealie:
    image: ghcr.io/mealie-recipes/mealie:v2.6.0 # 
    container_name: ${MEALIE_HOST}
    restart: always
    deploy:
      resources:
        limits:
          memory: 1000M # 
    volumes:
      - ./mealie/mealie-data:/app/data/
    environment:
      # Set Backend ENV Variables Here
      ALLOW_SIGNUP: "false"
      PUID: 1000
      PGID: 1000
      TZ: America/Anchorage
      # Database Settings
      DB_ENGINE: postgres
      POSTGRES_USER: mealie
      POSTGRES_PASSWORD: mealie
      POSTGRES_SERVER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: mealie
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: mealie-postgres
    image: postgres:15
    restart: always
    volumes:
      - ./mealie/mealie-pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: mealie
      POSTGRES_USER: mealie
      PGUSER: mealie
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3

  broker:
    container_name: paperless-broker
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - ./paperless/redisdata:/data

  db:
    container_name: paperless-db
    image: docker.io/library/postgres:16
    restart: unless-stopped
    volumes:
      - ./paperless/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  paperless-webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    container_name: ${PAPERLESS_HOST}
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    ports:
      - "8000:8000"
    volumes:
      - ./paperless/data:/usr/src/paperless/data
      - ./paperless/media:/usr/src/paperless/media
      - ./paperless/export:/usr/src/paperless/export
      - ./paperless/consume:/usr/src/paperless/consume
    env_file: ./paperless/docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998

  gotenberg:
    container_name: paperless-gotenberg
    image: docker.io/gotenberg/gotenberg:8.7
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    container_name: paperless-tika
    image: docker.io/apache/tika:latest
    restart: unless-stopped
